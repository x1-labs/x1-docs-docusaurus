"use strict";(self.webpackChunkx_1_docs=self.webpackChunkx_1_docs||[]).push([[924],{4575:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>i,default:()=>h,frontMatter:()=>o,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"getting-started/installation","title":"Installation","description":"Step-by-step guide to installing Rust, Solana tools, and Tachyon v2.0 on your local machine.","source":"@site/docs/getting-started/installation.md","sourceDirName":"getting-started","slug":"/getting-started/installation","permalink":"/getting-started/installation","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Installation","description":"Step-by-step guide to installing Rust, Solana tools, and Tachyon v2.0 on your local machine.","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"The constitution of X1","permalink":"/the-constitution-of-x1"},"next":{"title":"Get Funded","permalink":"/getting-started/get-funded/"}}');var s=t(4848),l=t(8453);const o={title:"Installation",description:"Step-by-step guide to installing Rust, Solana tools, and Tachyon v2.0 on your local machine.",sidebar_position:1},i="Installation",r={},c=[{value:"1. Install Tachyon v2.0 and Solana tools",id:"1-install-tachyon-v20-and-solana-tools",level:2},{value:"2: Verify the installation",id:"2-verify-the-installation",level:2},{value:"3: Generate a Solana Keypair",id:"3-generate-a-solana-keypair",level:2},{value:"4: Connect to the X1 Testnet",id:"4-connect-to-the-x1-testnet",level:2}];function d(e){const n={admonition:"admonition",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,l.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"installation",children:"Installation"})}),"\n",(0,s.jsx)(n.p,{children:"This guide walks you through installing the Solana (X1) tools and Tachyon v2.0."}),"\n",(0,s.jsx)(n.h2,{id:"1-install-tachyon-v20-and-solana-tools",children:"1. Install Tachyon v2.0 and Solana tools"}),"\n",(0,s.jsx)(n.p,{children:"X1 uses Solana tools to interact with the network. Tachyon v2.0 is the X1 validator client."}),"\n",(0,s.jsxs)(n.p,{children:[":::tabs key",":os"]}),"\n",(0,s.jsx)(n.p,{children:"== Managed Install"}),"\n",(0,s.jsx)(n.p,{children:"::: code-group"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"[Linux]",children:'sh -c "$(curl -sSfL https://release.x1.xyz/stable/install)"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"[Mac OS]",children:'sh -c "$(curl -sSfL https://release.x1.xyz/stable/install)"\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"[Windows]",children:'# Open a Command Prompt (cmd.exe) as an Administrator and run:\ncmd /c "curl https://release.x1.xyz/stable/tachyon-install-init-x86_64-pc-windows-msvc.exe --output C:\\agave-install-tmp\\agave-install-init.exe --create-dirs"\nC:\\agave-install-tmp\\agave-install-init.exe v2.2.0\n'})}),"\n",(0,s.jsx)(n.p,{children:"== From Source"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"[!WARNING]\nBuilding from source is recommended for developers and advanced users."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"::: code-group"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"[Ubuntu]",children:'# Install dependencies\nsudo apt update -y\nsudo apt install -y curl \\\n                 git \\\n                 libssl-dev \\\n                 libudev-dev \\\n                 pkg-config \\\n                 zlib1g-dev \\\n                 llvm \\\n                 clang \\\n                 cmake \\\n                 make \\\n                 libprotobuf-dev \\\n                 protobuf-compiler\n\n\n# Install Rust\ncurl https://sh.rustup.rs -sSf | sh\nsource $HOME/.cargo/env\nrustup component add rustfmt\n\n# Clone the Tachyon repository and Build\ngit clone https://github.com/x1-labs/tachyon.git\ncd tachyon\ncargo build --release\n\n# Update your PATH (Bash)\nexport PATH=$PATH:$(pwd)/target/release\necho "export PATH=$PATH:$(pwd)/target/release" >> ~/.bashrc\n'})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",metastring:"[Mac OS]",children:'curl https://sh.rustup.rs -sSf | sh\nsource $HOME/.cargo/env\nrustup component add rustfmt\n\n# Clone the Tachyon repository and Build\ngit clone https://github.com/x1-labs/tachyon.git\ncd tachyon\ncargo build --release\n\n# Update your PATH (Zsh)\nexport PATH=$PATH:$(pwd)/target/release\necho "export PATH=$PATH:$(pwd)/target/release" >> ~/.zshrc\n'})}),"\n",(0,s.jsx)(n.p,{children:":::"}),"\n",(0,s.jsx)(n.h2,{id:"2-verify-the-installation",children:"2: Verify the installation"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"solana --version\ntachyon-validator --version\n"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:"If you see the versions listed below, the installation was successful:"}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"solana-cli 2.0.XX (src:00000000; feat:XXXXXXXXXXXX, client:Tachyon)\ntachyon-validator 2.0.XX (src:00000000; feat:XXXXXXXXXXXX, client:Tachyon)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"3-generate-a-solana-keypair",children:"3: Generate a Solana Keypair"}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"Write down your mnemonic seed phrase and keep it safe offline. You will need it to recover your keypair."})}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"solana-keygen new\n"})}),"\n",(0,s.jsx)(n.h2,{id:"4-connect-to-the-x1-testnet",children:"4: Connect to the X1 Testnet"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-bash",children:"solana config set --url https://rpc.testnet.x1.xyz\n"})})]})}function h(e={}){const{wrapper:n}={...(0,l.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>i});var a=t(6540);const s={},l=a.createContext(s);function o(e){const n=a.useContext(l);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),a.createElement(l.Provider,{value:n},e.children)}}}]);