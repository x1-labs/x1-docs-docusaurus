"use strict";(self.webpackChunkx_1_docs=self.webpackChunkx_1_docs||[]).push([[560],{1139:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"core-concepts/dynamic-base-fees","title":"Dynamic Base Fees","description":"Base fees that adjust to actual network demand","source":"@site/docs/core-concepts/dynamic-base-fees.md","sourceDirName":"core-concepts","slug":"/core-concepts/dynamic-base-fees","permalink":"/core-concepts/dynamic-base-fees","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"title":"Dynamic Base Fees","description":"Base fees that adjust to actual network demand","sidebar_position":1},"sidebar":"tutorialSidebar","previous":{"title":"Importing a Keypair into Backpack Wallet","permalink":"/getting-started/wallets/backpack"},"next":{"title":"Zero-Cost Votes","permalink":"/core-concepts/zero-cost-votes"}}');var t=s(4848),r=s(8453);const a={title:"Dynamic Base Fees",description:"Base fees that adjust to actual network demand",sidebar_position:1},c="Dynamic Base Fees",o={},l=[{value:"Solana\u2019s Transaction Fee Model",id:"solanas-transaction-fee-model",level:2},{value:"X1\u2019s Fee Model: Congestion-Reflective Dynamic Base Fees",id:"x1s-fee-model-congestion-reflective-dynamic-base-fees",level:2},{value:"Fee Model Comparison",id:"fee-model-comparison",level:2},{value:"The Impact of X1\u2019s Pricing Model",id:"the-impact-of-x1s-pricing-model",level:2},{value:"Technical Implementation",id:"technical-implementation",level:2}];function d(e){const n={h1:"h1",h2:"h2",header:"header",hr:"hr",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"dynamic-base-fees",children:"Dynamic Base Fees"})}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.strong,{children:"Base fees that adjust to actual network demand"})}),"\n",(0,t.jsxs)(n.p,{children:["Transaction pricing on the X1 Blockchain consists of ",(0,t.jsx)(n.strong,{children:"base fees"})," and ",(0,t.jsx)(n.strong,{children:"priority fees"}),":"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Base fees"})," dynamically adjust based on network congestion."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Priority fees"})," are optional user-set tips to validators, helping prioritize transactions in local fee market threads."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"solanas-transaction-fee-model",children:"Solana\u2019s Transaction Fee Model"}),"\n",(0,t.jsxs)(n.p,{children:["Solana prioritizes transactions through ",(0,t.jsx)(n.strong,{children:"local fee markets"}),", but its static ",(0,t.jsx)(n.strong,{children:"5,000 lamport"})," base fee per transaction signature is insufficient during periods of high demand. This leads to several issues:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Spam vulnerability"})," \u2013 Fixed fees fail to deter excessive low-value transactions."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Lack of global adjustment"})," \u2013 No system-wide Compute Unit (CU) accounting leads to congestion."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.strong,{children:"Performance bottlenecks"})," \u2013 Without dynamic pricing, low-priority transactions compete for resources, reducing efficiency."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"x1s-fee-model-congestion-reflective-dynamic-base-fees",children:"X1\u2019s Fee Model: Congestion-Reflective Dynamic Base Fees"}),"\n",(0,t.jsxs)(n.p,{children:["X1 dynamically adjusts base fees based on ",(0,t.jsx)(n.strong,{children:"global compute-unit (CU) congestion"})," across its threads. The network enforces a ",(0,t.jsx)(n.strong,{children:"48M CU per block limit"}),", with fees scaling based on resource consumption:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Higher CU usage \u2192 Higher fees"})}),"\n",(0,t.jsx)(n.li,{children:(0,t.jsx)(n.strong,{children:"Increased network load \u2192 Progressive fee scaling"})}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["This ",(0,t.jsx)(n.strong,{children:"economic backpressure"})," ensures:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Reduced spam"})," \u2013 Costly low-value transactions are discouraged."]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Optimal resource allocation"})," \u2013 Transactions reflect actual demand."]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Sustained performance"})," \u2013 High-priority transactions maintain efficiency."]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Block Pricing",src:s(3631).A+"",width:"3397",height:"2104"})}),"\n",(0,t.jsx)(n.h2,{id:"fee-model-comparison",children:"Fee Model Comparison"}),"\n",(0,t.jsxs)(n.table,{children:[(0,t.jsx)(n.thead,{children:(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.th,{children:"Blockchain"}),(0,t.jsx)(n.th,{children:"Execution Model"}),(0,t.jsx)(n.th,{children:"Base Fee Strategy"}),(0,t.jsx)(n.th,{children:"Spam Mitigation"})]})}),(0,t.jsxs)(n.tbody,{children:[(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Ethereum"})}),(0,t.jsx)(n.td,{children:"Single-threaded"}),(0,t.jsx)(n.td,{children:"Global base fees, high costs"}),(0,t.jsx)(n.td,{children:"Limited"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"Solana"})}),(0,t.jsx)(n.td,{children:"Multi-threaded"}),(0,t.jsx)(n.td,{children:"Local fee markets, static fees"}),(0,t.jsx)(n.td,{children:"Low deterrence"})]}),(0,t.jsxs)(n.tr,{children:[(0,t.jsx)(n.td,{children:(0,t.jsx)(n.strong,{children:"X1"})}),(0,t.jsx)(n.td,{children:"Multi-threaded"}),(0,t.jsx)(n.td,{children:"Dynamic base fees, congestion-based pricing"}),(0,t.jsx)(n.td,{children:"High deterrence"})]})]})]}),"\n",(0,t.jsxs)(n.p,{children:["X1 combines ",(0,t.jsx)(n.strong,{children:"parallel execution"})," (like Solana) with ",(0,t.jsx)(n.strong,{children:"global base fee enforcement"})," (like Ethereum). However, unlike Solana\u2019s static base fees, ",(0,t.jsx)(n.strong,{children:"X1 scales fees dynamically"}),", ensuring fair transaction pricing based on computational demand."]}),"\n",(0,t.jsx)(n.h2,{id:"the-impact-of-x1s-pricing-model",children:"The Impact of X1\u2019s Pricing Model"}),"\n",(0,t.jsxs)(n.p,{children:["The ",(0,t.jsx)(n.strong,{children:"dynamic base fee system"})," ensures ",(0,t.jsx)(n.strong,{children:"low transaction costs"}),", increasing only as network usage rises. This has several benefits:"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Higher validator earnings"})," \u2013 As network activity grows, validator rewards increase."]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Deflationary effect"})," \u2013 More transactions lead to higher native coin burns, increasing blockchain value."]}),"\n",(0,t.jsxs)(n.li,{children:["\u2705 ",(0,t.jsx)(n.strong,{children:"Efficient & cost-effective transactions"})," \u2013 Spam is minimized, and fees align with demand."]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["By linking fees to actual computational load, X1 maintains ",(0,t.jsx)(n.strong,{children:"high performance, scalability, and decentralization"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"technical-implementation",children:"Technical Implementation"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Block Pricing",src:s(5522).A+"",width:"4357",height:"1835"})}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsxs)(n.p,{children:["X1\u2019s ",(0,t.jsx)(n.strong,{children:"dynamic base fees"})," optimize transaction costs while maintaining ",(0,t.jsx)(n.strong,{children:"network integrity and efficiency"}),", making it a robust alternative to traditional static fee models."]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},3631:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/Block-pricing (1)-f7235363d81c48d53b1cf616d22d7889.png"},5522:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/calculate-tx-cost-fbb115beedfba0544d28c315ac405b2f.png"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var i=s(6540);const t={},r=i.createContext(t);function a(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);